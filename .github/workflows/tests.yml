name: Tests

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY || 'dummy' }}
  RAILS_ENV: test
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY || 'dummy' }}
  WISE_API_KEY: ${{ secrets.WISE_API_KEY || 'dummy' }}
  WISE_PROFILE_ID: ${{ secrets.WISE_PROFILE_ID || 0 }}

jobs:
  rspec:
    runs-on: ubicloud-standard-2

    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: flexile_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.4.2
        ports:
          - 6389:6379
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v4

      - name: Build setup
        uses: ./.github/common/

      - name: Setup test database
        run: cd backend && bundle exec rails db:create db:schema:load

      - name: Run tests
        env:
          RUBY_YJIT_ENABLE: 1
        run: cd backend && bundle exec rspec --format RSpec::Github::Formatter --tag ~skip --tag ~type:system --format progress
        timeout-minutes: 20

  playwright:
    name: playwright
    runs-on: ubicloud-standard-8

    steps:
      - uses: actions/checkout@v4

      - name: Generate cache key
        id: cache-key
        run: |
          CACHE_FALLBACK_KEY="setup-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-"
          CACHE_KEY="setup-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('frontend/**/*.ts', 'frontend/**/*.tsx') }}"
          echo "key=$CACHE_KEY" >> $GITHUB_OUTPUT
          echo "fallback_key=$CACHE_FALLBACK_KEY" >> $GITHUB_OUTPUT
          echo "Cache key: $CACHE_KEY"
          echo "Cache fallback key: $CACHE_FALLBACK_KEY"

      - name: Build setup
        uses: ./.github/common/

      - name: Restore next build & browsers
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            frontend/.next
            .puppeteer
            ~/.cache/ms-playwright
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            ${{ steps.cache-key.outputs.fallback_key }}
            setup-${{ runner.os }}-

      - run: pnpm puppeteer browsers install chrome
        if: steps.restore-cache.outputs.cache-hit != 'true'

      - name: Install Playwright Chromium deps
        run: pnpm playwright install-deps chromium

      - name: Install Playwright Chromium (headless shell only)
        run: pnpm playwright install --only-shell chromium
        if: steps.restore-cache.outputs.cache-hit != 'true'

      - run: node docker/createCertificate.js

      - run: NODE_ENV=test pnpm run build-next --no-lint
        shell: bash

      - name: Cache next build & browsers
        id: save-cache
        uses: actions/cache/save@v4
        with:
          path: |
            frontend/.next
            .puppeteer
            ~/.cache/ms-playwright
          key: ${{ steps.cache-key.outputs.key }}

      - name: Install foreman
        run: gem install foreman

      - name: Run docker compose
        run: docker compose -f docker/docker-compose-local-linux.yml up -d

      - name: Run Playwright tests
        run: pnpm playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
