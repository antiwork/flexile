#!/bin/bash

set -e

function install_if_missing() {
  local cmd=$1
  local name=$2
  local install_cmd=$3

  if command -v "$cmd" &> /dev/null; then
    return 0
  fi

  read -p "Would you like to install $name? (y/N) " answer
  if [ "$answer" = "y" ] || [ "$answer" = "Y" ]; then
    eval "$install_cmd"
    return 0
  fi
  return 1
}

echo "ðŸš€ Setting up development environment..."

install_if_missing "brew" "Homebrew" "curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh | bash"

echo "PostgreSQL and Redis will be provided by Docker containers"

install_if_missing "mkcert" "mkcert for SSL certificates" "brew install mkcert"

# Check Node version
if ! node -v | grep -q "$(cat .node-version)" 2>/dev/null; then
  echo "Warning: Node version mismatch. Expected: $(cat .node-version), Current: $(node -v)"
  echo "Consider using 'pnpm env use --global $(cat .node-version)' to install the correct version"
fi

# Check if we have the correct Ruby version
eval "$(rbenv init - zsh)" 2>/dev/null || true
if ! ruby -v | grep -q "$(cat .ruby-version)" 2>/dev/null; then
  read -p "Would you like to install Ruby $(cat .ruby-version) using rbenv? (y/N) " answer
  if [ "$answer" = "y" ] || [ "$answer" = "Y" ]; then
    # Install rbenv if not present
    if ! command -v rbenv &> /dev/null; then
      echo "Installing rbenv..."
      curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash
    fi
    
    # Initialize rbenv for current session
    eval "$(rbenv init - zsh)"
    
    echo "Installing Ruby $(cat .ruby-version)..."
    rbenv install -s $(cat .ruby-version)
    rbenv global $(cat .ruby-version)
    rbenv rehash
    
    echo "Ruby $(rbenv version) is now active"
  else
    echo "Please make sure Ruby $(cat .ruby-version) is installed before continuing."
  fi
fi

corepack enable

if [ ! -f ".env" ]; then
    read -p "Would you like to pull environment variables from Vercel? (y/N) " answer
Â 
    if [ "$answer" = "y" ] || [ "$answer" = "Y" ]; then
        pnpx vercel link && pnpx vercel env pull .env
    else
      cp .env.example .env
      echo "A sample .env file has been created. Please fill it in with your own keys."
    fi
fi

ln -sf $PWD/.env ./frontend/.env

gem install bundler foreman

echo "âœ¨ Setup complete! You can now start the development server."
