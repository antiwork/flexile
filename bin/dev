#!/bin/bash

set -e

if [ -f ".vercel/project.json" ]; then
    pnpx vercel env pull .env
elif [ ! -f ".env" ]; then
    echo ".env file not found. Please run bin/setup first."
fi


# Generate SSL certificates and start local services
make local

# Generate combined SSL certificates and set environment variables
mkdir -p tmp
default_cert_file=$(ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE')
mkcert_root_ca_file="$(mkcert -CAROOT)/rootCA.pem"
combined_cert_file="tmp/combined_ca_certs.pem"

if [ -f "$default_cert_file" ] && [ -f "$mkcert_root_ca_file" ]; then
  cat "$default_cert_file" "$mkcert_root_ca_file" > "$combined_cert_file"
  echo "Combined certificates created at $combined_cert_file"
  export SSL_CERT_FILE="$combined_cert_file"
else
  echo "Warning: Could not create combined cert file. Using default certificates."
fi

export NODE_EXTRA_CA_CERTS="$mkcert_root_ca_file"


# Install dependencies and prepare database
pnpm install
cd backend
bundle install
bin/rails db:prepare
cd ..

function kill_process_listening_on_port {
  lsof -i :$1 | grep LISTEN | awk '{print $2}' | xargs -r kill -9
}

echo "Starting application services"
kill_process_listening_on_port 3000
kill_process_listening_on_port 3001
kill_process_listening_on_port 8288 # inngest

foreman start -f Procfile.dev "$@"
